{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity || 0\n      }));\n    } catch (e) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (e) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/14-redux-practice/src/store/cart-action.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","e","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAC/B,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,SAAS,GAAG,YAAY;AAC1B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACZ,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACH;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AACA,aAAOD,IAAP;AACH,KATD;;AAWA,QAAI;AACA,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwB;AAC7BC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,IAAkB,EADI;AAE7BC,QAAAA,aAAa,EAAEH,QAAQ,CAACG,aAAT,IAA0B;AAFZ,OAAxB,CAAD,CAAR;AAIH,KAND,CAME,OAAMC,CAAN,EAAS;AACPZ,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,OADwB;AAEhCC,QAAAA,KAAK,EAAE,QAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH;AACJ,GAzBD;AA0BH,CA3BM;AA4BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAClC,SAAO,MAAOlB,QAAP,IAAoB;AACvBA,IAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,MAAAA,MAAM,EAAE,SADwB;AAEhCC,MAAAA,KAAK,EAAE,YAFyB;AAGhCC,MAAAA,OAAO,EAAE;AAHuB,KAA3B,CAAD,CAAR;;AAMA,UAAMG,WAAW,GAAG,YAAY;AAC5B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAD,EAAsE;AAC9FiB,QAAAA,MAAM,EAAE,KADsF;AAE9FC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBb,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KADK;AAEjBC,UAAAA,aAAa,EAAEO,IAAI,CAACP;AAFH,SAAf;AAFwF,OAAtE,CAA5B;;AAQA,UAAI,CAACT,QAAQ,CAACE,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACH;AACJ,KAZD;;AAcA,QAAI;AACA,YAAMc,WAAW,EAAjB;AACAnB,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,SADwB;AAEhCC,QAAAA,KAAK,EAAE,UAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH,KAPD,CAOE,OAAMJ,CAAN,EAAS;AACPZ,MAAAA,QAAQ,CAACH,SAAS,CAACgB,gBAAV,CAA2B;AAChCC,QAAAA,MAAM,EAAE,OADwB;AAEhCC,QAAAA,KAAK,EAAE,QAFyB;AAGhCC,QAAAA,OAAO,EAAE;AAHuB,OAA3B,CAAD,CAAR;AAKH;AACJ,GAnCD;AAoCH,CArCM","sourcesContent":["import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\n\nexport const fetchCartData = () => {\n    return async dispatch => {\n        const fetchData = async () => {\n            const response = await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/cart.json')\n\n            if(!response.ok){\n                throw new Error('Could not fetch cart data!')\n            }\n\n            const data = await response.json();\n            return data;\n        }\n\n        try {\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart({\n                items: cartData.items || [],\n                totalQuantity: cartData.totalQuantity || 0\n            }));\n        } catch(e) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Fetching cart data failed!',\n            }))\n        }\n    }\n}\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status: 'pending',\n            title: 'Sending...',\n            message: 'Sending cart data!',\n        }))\n\n        const sendRequest = async () => {\n            const response = await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/cart.json',{\n                method: 'PUT',\n                body: JSON.stringify({\n                    items: cart.items,\n                    totalQuantity: cart.totalQuantity,\n                }),\n            })\n    \n            if (!response.ok) {\n                throw new Error('Sending cart data failed!')\n            }\n        }\n\n        try {\n            await sendRequest();\n            dispatch(uiActions.showNotification({\n                status: 'success',\n                title: 'Success!',\n                message: 'Sent cart data successfully!',\n            }))\n        } catch(e) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Sending cart data failed!',\n            }))\n        }\n    };\n};"]},"metadata":{},"sourceType":"module"}