{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/14-redux-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Products from './components/Shop/Products'; //import { uiActions } from './store/ui-slice';\n\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]); // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     dispatch(uiActions.showNotification({\n  //       status: 'pending',\n  //       title: 'Sending...',\n  //       message: 'Sending cart data!',\n  //     }))\n  //     const response = await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/cart.json',{\n  //       method: 'PUT',\n  //       body: JSON.stringify(cart),\n  //     })\n  //     if (!response.ok) {\n  //       throw new Error('Sending cart data failed!')\n  //     }\n  //     dispatch(uiActions.showNotification({\n  //       status: 'success',\n  //       title: 'Success!',\n  //       message: 'Sent cart data successfully!',\n  //     }))\n  //     const responseData = await response.json();\n  //   };\n  //   if (isInitial){\n  //     isInitial = false;\n  //     return;\n  //   }\n  //   sendCartData().catch(error => {\n  //     dispatch(uiActions.showNotification({\n  //       status: 'error',\n  //       title: 'Error!',\n  //       message: 'Sending cart data failed!',\n  //     }))\n  //   })\n  // }, [cart,dispatch])\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [showCart && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"xlGQVV2v2mCmyEOw+rIKbIx/YIg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/14-redux-practice/src/App.js"],"names":["Fragment","useEffect","Cart","Layout","useSelector","useDispatch","Products","Notification","fetchCartData","sendCartData","isInitial","App","dispatch","cart","state","showCart","ui","cartIsVisible","notification","status","title","message"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,qBAA5C;;AACA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,IAAI,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,QAAQ,GAAGX,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,EAAN,CAASC,aAAnB,CAA5B;AACA,QAAMC,YAAY,GAAGd,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACE,EAAN,CAASE,YAAnB,CAAhC;AAGAjB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAFQ,EAEP,CAACI,QAAD,CAFO,CAAT;AAGAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,SAAJ,EAAc;AACZA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AACDE,IAAAA,QAAQ,CAACH,YAAY,CAACI,IAAD,CAAb,CAAR;AACD,GANQ,EAMN,CAACA,IAAD,EAAMD,QAAN,CANM,CAAT,CAVa,CAiBb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBACE,QAAC,QAAD;AAAA,eACGM,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACC,MADvB;AAEE,MAAA,KAAK,EAAED,YAAY,CAACE,KAFtB;AAGE,MAAA,OAAO,EAAEF,YAAY,CAACG;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACCN,QAAQ,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADb,eAEA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAtEQJ,G;UACUN,W,EACJD,W,EACIA,W,EACIA,W;;;KAJdO,G;AAwET,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Products from './components/Shop/Products';\n//import { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { fetchCartData, sendCartData } from './store/cart-action';\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const showCart = useSelector(state => state.ui.cartIsVisible);\n  const notification = useSelector(state => state.ui.notification);\n\n\n  useEffect(() => {\n    dispatch(fetchCartData())\n  },[dispatch])\n  useEffect(() => {\n    if (isInitial){\n      isInitial = false;\n      return;\n    }\n    dispatch(sendCartData(cart));\n  }, [cart,dispatch])\n  // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     dispatch(uiActions.showNotification({\n  //       status: 'pending',\n  //       title: 'Sending...',\n  //       message: 'Sending cart data!',\n  //     }))\n  //     const response = await fetch('https://food-order-app-3b13d-default-rtdb.firebaseio.com/cart.json',{\n  //       method: 'PUT',\n  //       body: JSON.stringify(cart),\n  //     })\n\n  //     if (!response.ok) {\n  //       throw new Error('Sending cart data failed!')\n  //     }\n\n  //     dispatch(uiActions.showNotification({\n  //       status: 'success',\n  //       title: 'Success!',\n  //       message: 'Sent cart data successfully!',\n  //     }))\n\n  //     const responseData = await response.json();\n  //   };\n\n  //   if (isInitial){\n  //     isInitial = false;\n  //     return;\n  //   }\n\n  //   sendCartData().catch(error => {\n  //     dispatch(uiActions.showNotification({\n  //       status: 'error',\n  //       title: 'Error!',\n  //       message: 'Sending cart data failed!',\n  //     }))\n  //   })\n  // }, [cart,dispatch])\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n      {showCart && <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}